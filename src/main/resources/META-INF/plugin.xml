<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>api.haus.unreal-angelscript</id>
    <name>AngelScript for Unreal</name>
    <vendor>API.Haus</vendor>

    <description><![CDATA[
    AngelScript for Unreal â€” IntelliJ plugin.
    Fork of angel-intellij by sashi0034; credits preserved.
    Uses Hazelight Unreal AngelScript Language Server.
    ]]></description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.redhat.devtools.lsp4ij</depends>

    <!--FIXME    <resource-bundle>messages.MyBundle</resource-bundle>-->

    <extensions defaultExtensionNs="com.intellij">
        <!--FIXME        <toolWindow factoryClass="com.github.sashi0034.angelintellij.toolWindow.MyToolWindowFactory" id="MyToolWindow"/>-->

        <postStartupActivity implementation="com.github.sashi0034.angelintellij.ValidationStartupActivity"/>

        <fileType
                name="AngelScript"
                implementationClass="com.github.sashi0034.angelintellij.language.AngelScriptFileType"
                fieldName="INSTANCE"
                language="angelscript"
                extensions="as"/>

        <fileType
                name="AngelScript Predefined"
                implementationClass="com.github.sashi0034.angelintellij.language.AngelScriptPredefinedFileType"
                fieldName="INSTANCE"
                language="angelscript-predefined"
                extensions="predefined"/>

        <lang.braceMatcher language="angelscript"
                           implementationClass="com.github.sashi0034.angelintellij.editor.AngelScriptBraceMatcher"/>

        <!-- Parser definition disabled to rely fully on LSP for parsing/analysis -->
        <!-- AngelScript for Unreal has different syntax than standard AngelScript, -->
        <!-- so LSP server handles all parsing, error detection, and code analysis -->
        <lang.parserDefinition language="angelscript"
                               implementationClass="com.github.sashi0034.angelintellij.language.AngelScriptParserDefinition"/>

        <!-- Syntax highlighter still uses the lexer for basic token-based highlighting -->
        <lang.syntaxHighlighterFactory language="angelscript"
                                       implementationClass="com.github.sashi0034.angelintellij.editor.AngelScriptSyntaxHighlighterFactory"/>

        <!-- Spell checking strategy to exclude Unreal Engine macros (UPROPERTY, UFUNCTION, etc.) -->
        <spellchecker.support language="angelscript"
                              implementationClass="com.github.sashi0034.angelintellij.editor.AngelScriptSpellCheckingStrategy"/>

        <!-- Status bar widget indicating Unreal/LSP connection state -->
        <statusBarWidgetFactory id="AngelScriptConnectionStatus" implementation="com.github.sashi0034.angelintellij.ui.AngelScriptStatusBarWidgetFactory"/>

        <!--        <lang.quoteHandler language="AngelScript"-->
        <!--                           implementationClass="com.github.sashi0034.angelintellij.editor.AngelScriptQuoteHandler"/>-->
    </extensions>

    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
        <server id="angelScriptLanguageServer"
                name="AngelScript Language Server"
                factoryClass="com.github.sashi0034.angelintellij.lsp.AngelScriptLanguageServerFactory">
            <description><![CDATA[
            AngelScript Language Server (Preview)
            ]]>
            </description>
        </server>

        <semanticTokensColorsProvider
                serverId="angelScriptLanguageServer"
                class="com.github.sashi0034.angelintellij.lsp.AngelScriptSemanticTokensColorProvider"/>

        <fileNamePatternMapping patterns="*.as;as.predefined"
                                serverId="angelScriptLanguageServer"
                                languageId="angelscript"/>
    </extensions>

    <actions>
        <!-- Reuse VS Code action ids while waiting for standardization of LSP commands https://github.com/microsoft/language-server-protocol/issues/788 -->
<!--        <action id="editor.action.triggerParameterHints"-->
<!--                class="com.github.sashi0034.angelintellij.lsp.action.TriggerParameterHintsAction"/>-->

<!--        <action id="editor.action.triggerSuggest"-->
<!--                class="com.github.sashi0034.angelintellij.lsp.action.TriggerSuggestAction"/>-->

    </actions>

    <applicationListeners>
        <!--FIXME        <listener class="com.github.sashi0034.angelintellij.listeners.MyApplicationActivationListener"-->
        <!--FIXME                  topic="com.intellij.openapi.application.ApplicationActivationListener"/>-->
    </applicationListeners>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Application-level service to track LSP/Unreal connection state -->
        <applicationService serviceImplementation="com.github.sashi0034.angelintellij.lsp.ConnectionStateService"/>
    </extensions>
</idea-plugin>
